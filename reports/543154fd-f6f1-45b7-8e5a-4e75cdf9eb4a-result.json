{"name": "test_ct31", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct31():\n        webdriver.get(url)\n        editar_palestrante.caminho()\n>       editar_palestrante.ct_31_editar_palestrante(\n            nome                = 'Arthur',\n            email               = 'Arthur@email.com',\n        )\n\ntests\\test_editar_palestrante.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.page_editar_palestrante.editarPalestrante object at 0x00000242A667B6D0>, nome = 'Arthur', email = 'Arthur@email.com'\n\n    def ct_31_editar_palestrante(self, nome, email):\n        erro = False\n        try:\n            sleep(2)\n            self.find_element(self.nome).clear()\n            self.find_element(self.salvar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                    erro = True\n                self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.nome).send_keys(nome)\n                self.find_element(self.email).clear()\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n    \n            if erro is False:\n                self.find_element(self.nome).send_keys(email)\n                self.find_element(self.cpf).clear()\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                print(\"\\n CT_31 reportou erro: O sistema exibiu os campos faltantes\")\n                assert True\n            else:\n                print(\"\\n [!] CT_31 reportou erro: Palestrante editado com campos obrigatorios nao preenchidos\")\n>               assert False\nE               AssertionError\n\npages\\page_editar_palestrante.py:295: AssertionError"}, "start": 1606190719351, "stop": 1606190732019, "uuid": "1791ae97-a912-48a2-871e-0495c3d33f81", "historyId": "8e43ed48954f0bb97dd7c473c33c5fa0", "testCaseId": "109dd230d96405c5ed49086c0b197f15", "fullName": "tests.test_editar_palestrante#test_ct31", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_editar_palestrante"}, {"name": "host", "value": "DESKTOP-NM8JMBK"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_editar_palestrante"}]}