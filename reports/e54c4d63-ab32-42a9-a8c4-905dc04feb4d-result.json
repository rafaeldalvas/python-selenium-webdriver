{"name": "test_ct24", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct24():\n        webdriver.get(url)\n        cadastrar_palestrante.caminho()\n>       cadastrar_palestrante.ct24_cadastrar_palestrante(\n            nome='Rafaela',\n            email='rafaela@email.com',\n            cpf='271.471.130-80'\n        )\n\ntests\\test_cadastrar_palestrante.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.page_cadastrar_palestrante.cadastrarPalestrante object at 0x000001714BEBB670>, nome = 'Rafaela', email = 'rafaela@email.com', cpf = '271.471.130-80'\n\n    def ct24_cadastrar_palestrante(self, nome, email, cpf):\n        erro = False\n        try:\n            sleep(1)\n            self.find_element(self.nome).send_keys(nome)\n            self.find_element(self.email).send_keys(email)\n            self.find_element(self.cpf).send_keys(cpf)\n            self.find_element(self.nome).clear()\n            self.find_element(self.salvar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text == 'Palestrante salvo com sucesso':\n                    erro = True\n    \n            if erro is False:\n                self.find_element(self.nome).send_keys(nome)\n                self.find_element(self.email).clear()\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text == 'Palestrante salvo com sucesso':\n                        erro = True\n    \n            if erro is False:\n                self.find_element(self.email).send_keys(email)\n                self.find_element(self.cpf).clear()\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n            if erro is False:\n                print(\"\\n CT_24 reportou erro: O sistema exibiu os campos faltantes\")\n                assert True\n            else:\n                self.find_element(self.btn_ok_alert).click()\n                print(\"\\n [!] CT_24 reportou erro: Palestrante cadastrado com campos obrigatorios nao preenchidos\")\n>               assert False\nE               AssertionError\n\npages\\page_cadastrar_palestrante.py:192: AssertionError"}, "start": 1606187091400, "stop": 1606187099997, "uuid": "67bcc630-ab0d-492a-9ec8-df8cad91f9d8", "historyId": "6e3becde84a2eb4ae71634c94de187d3", "testCaseId": "ba37c2855f92a9aae306b7c7da5e2935", "fullName": "tests.test_cadastrar_palestrante#test_ct24", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cadastrar_palestrante"}, {"name": "host", "value": "DESKTOP-NM8JMBK"}, {"name": "thread", "value": "13308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cadastrar_palestrante"}]}
