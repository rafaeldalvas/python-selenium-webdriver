{"name": "test_ct04", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct04():\n        webdriver.get(url)\n        criar_evento.caminho()\n>       criar_evento.ct04_criar_evento(\n            nome                = 'Evento teste ct1',\n            descricao           = 'testando evento',\n            inicio_evento       = '22/12/2020',\n            fim_evento          = '01/01/2021',\n            inicio_inscricao    = '20/11/2020',\n            fim_inscricao       = '20/12/2020',\n        )\n\ntests\\test_criar_evento.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.page_criar_evento.criarEvento object at 0x0000020DAA3EB940>, nome = 'Evento teste ct1', descricao = 'testando evento', inicio_evento = '22/12/2020', fim_evento = '01/01/2021', inicio_inscricao = '20/11/2020'\nfim_inscricao = '20/12/2020'\n\n    def ct04_criar_evento(self, nome, descricao, inicio_evento, fim_evento, inicio_inscricao, fim_inscricao):\n        erro = True\n        txt = \"Evento salvo com sucesso\"\n        try:\n            sleep(1)\n            self.find_element(self.nome).send_keys(nome)\n            self.find_element(self.descricao).send_keys(descricao)\n            self.find_element(self.inicio_evento).clear()\n            self.find_element(self.inicio_evento).send_keys(inicio_evento)\n            self.find_element(self.fim_evento).clear()\n            self.find_element(self.fim_evento).send_keys(fim_evento)\n            self.find_element(self.inicio_inscricao).clear()\n            self.find_element(self.inicio_inscricao).send_keys(inicio_inscricao)\n            self.find_element(self.fim_inscricao).clear()\n            self.find_element(self.fim_inscricao).send_keys(fim_inscricao)\n            # TIPO DE EVENTO\n            self.find_element(self.btn_tipo_evento).click()\n            sleep(1)\n            self.find_element(self.tipo_evento).click()\n            # FIM TIPO DE EVENTO\n            sleep(1)\n            self.find_element(self.nome).clear()\n            sleep(1)\n            self.find_element(self.btn_enviar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text != txt:\n                    erro = False\n    \n            if erro is False:\n                self.find_element(self.nome).send_keys(nome)\n                self.find_element(self.descricao).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                self.find_element(self.descricao).send_keys(descricao)\n                self.find_element(self.inicio_evento).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                self.find_element(self.inicio_evento).send_keys(inicio_evento)\n                self.find_element(self.fim_evento).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                self.find_element(self.fim_evento).send_keys(fim_evento)\n                self.find_element(self.inicio_inscricao).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                self.find_element(self.inicio_inscricao).send_keys(inicio_inscricao)\n                self.find_element(self.fim_inscricao).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                self.find_element(self.fim_inscricao).send_keys(fim_inscricao)\n                self.find_element(self.select_tipo_evento).clear()\n                sleep(1)\n                self.find_element(self.btn_enviar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text != txt:\n                        erro = False\n    \n            if erro is False:\n                print(\"\\n CT_04 reportou erro: \" + self.find_element(self.alert_texto).text)\n                assert True\n            else:\n                print(\"\\n [!] CT_04 reportou erro: Evento criado com campos obrigatorios nao preenchidos\")\n>               assert False\nE               AssertionError\n\npages\\page_criar_evento.py:358: AssertionError"}, "start": 1606172788503, "stop": 1606172801918, "uuid": "4275bc7b-a937-40e8-b3cd-d73d192756ac", "historyId": "8dbddad2605d523ef26d82f839d66484", "testCaseId": "5d4d5115085eb9babcff446f648e77c7", "fullName": "tests.test_criar_evento#test_ct04", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_criar_evento"}, {"name": "host", "value": "DESKTOP-OFT3SDL"}, {"name": "thread", "value": "15952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_criar_evento"}]}