{"name": "test_ct30", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct30():\n        webdriver.get(url)\n        editar_palestrante.caminho()\n>       editar_palestrante.ct_30_editar_palestrante(\n            cpf                 = 'CPF',\n            rg                  = 'RG',\n            pis                 = 'PIS',\n            telefone            = 'TELEFONE',\n            agencia             = 'AGENCIA',\n            conta               = 'CONTA'\n        )\n\ntests\\test_editar_palestrante.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.page_editar_palestrante.editarPalestrante object at 0x00000242A667B6D0>, cpf = 'CPF', rg = 'RG', pis = 'PIS', telefone = 'TELEFONE', agencia = 'AGENCIA', conta = 'CONTA'\n\n    def ct_30_editar_palestrante(self, cpf, rg, pis, telefone, agencia, conta):\n        erro = False\n        try:\n            sleep(1)\n            cpf_old = self.find_element(self.cpf).get_attribute('value')\n            self.find_element(self.cpf).clear()\n            self.find_element(self.cpf).send_keys(cpf)\n            self.find_element(self.salvar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                    erro = True\n                self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.cpf).send_keys(cpf_old)\n                rg_old = self.find_element(self.rg).get_attribute('value')\n                self.find_element(self.rg).clear()\n                self.find_element(self.rg).send_keys(rg)\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.rg).send_keys(rg_old)\n                pis_old = self.find_element(self.pis).get_attribute('value')\n                self.find_element(self.pis).clear()\n                self.find_element(self.pis).send_keys(pis)\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.pis).send_keys(pis_old)\n                telefone_old = self.find_element(self.telefone).get_attribute('value')\n                self.find_element(self.telefone).clear()\n                self.find_element(self.telefone).send_keys(telefone)\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.telefone).send_keys(telefone_old)\n                agencia_old = self.find_element(self.agencia).get_attribute('value')\n                self.find_element(self.agencia).clear()\n                self.find_element(self.agencia).send_keys(agencia)\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                self.find_element(self.agencia).send_keys(agencia_old)\n                conta_old = self.find_element(self.conta).get_attribute('value')\n                self.find_element(self.conta).clear()\n                self.find_element(self.conta).send_keys(conta)\n                self.find_element(self.salvar).click()\n                msg = self.espera_mensagem()\n                if msg is True:\n                    if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                        erro = True\n                    self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                print(\"\\n CT_30 reportou erro: O sistema não permitiu caracteres inválidos\")\n                assert True\n            else:\n                print(\"\\n [!] CT_30 reportou erro: Palestrante editado com campos numéricos sem números\")\n>               assert False\nE               AssertionError\n\npages\\page_editar_palestrante.py:248: AssertionError"}, "start": 1606190707795, "stop": 1606190719146, "uuid": "81455156-b1cb-4c76-b560-baf4956c6c19", "historyId": "e495920ea43dde900e3d0aedae9abdf7", "testCaseId": "d3f9f90fc2fced2c15cc20f24c38f9ed", "fullName": "tests.test_editar_palestrante#test_ct30", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_editar_palestrante"}, {"name": "host", "value": "DESKTOP-NM8JMBK"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_editar_palestrante"}]}