{"name": "test_ct32", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct32():\n        webdriver.get(url)\n        editar_palestrante.caminho()\n>       editar_palestrante.ct_32_editar_palestrante(\n            cpf = '999.999.999-99'\n        )\n\ntests\\test_editar_palestrante.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.page_editar_palestrante.editarPalestrante object at 0x00000242A667B6D0>, cpf = '999.999.999-99'\n\n    def ct_32_editar_palestrante(self, cpf):\n        erro = False\n        try:\n            sleep(2)\n            self.find_element(self.cpf).clear()\n            self.find_element(self.cpf).send_keys(cpf)\n            self.find_element(self.salvar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                    erro = True\n                self.find_element(self.btn_ok_alert).click()\n    \n            if erro is False:\n                print(\"\\n CT_32 reportou erro: O sistema não permitiu um CPF inválido\")\n                assert True\n            else:\n                print(\"\\n [!] CT_32 reportou erro: Palestrante editado com CPF inválido\")\n>               assert False\nE               AssertionError\n\npages\\page_editar_palestrante.py:325: AssertionError"}, "start": 1606190732030, "stop": 1606190744509, "uuid": "53f36d21-9068-4a7b-9b85-ef220b722241", "historyId": "bdde413edb946ff4070ff3cf07600428", "testCaseId": "1e59757dacd6d7de38c9dc999fea8a90", "fullName": "tests.test_editar_palestrante#test_ct32", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_editar_palestrante"}, {"name": "host", "value": "DESKTOP-NM8JMBK"}, {"name": "thread", "value": "8580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_editar_palestrante"}]}