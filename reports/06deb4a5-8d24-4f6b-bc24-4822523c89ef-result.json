{"name": "test_ct25", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "def test_ct25():\n        webdriver.get(url)\n        cadastrar_palestrante.caminho()\n>       cadastrar_palestrante.ct25_cadastrar_palestrante(\n            nome='Gabriel',\n            email='gabriel@email.com',\n            cpf='999.999.999-99'\n        )\n\ntests\\test_cadastrar_palestrante.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.page_cadastrar_palestrante.cadastrarPalestrante object at 0x000001714BEBB670>, nome = 'Gabriel', email = 'gabriel@email.com', cpf = '999.999.999-99'\n\n    def ct25_cadastrar_palestrante(self, nome, email, cpf):\n        try:\n            sleep(1)\n            self.find_element(self.nome).send_keys(nome)\n            self.find_element(self.email).send_keys(email)\n            self.find_element(self.cpf).send_keys(cpf)\n            self.find_element(self.salvar).click()\n            msg = self.espera_mensagem()\n            if msg is True:\n                if self.find_element(self.alert_texto).text.find('Palestrante salvo com sucesso') > -1:\n                    self.find_element(self.btn_ok_alert).click()\n                    print(\"\\n [!] CT_25 reportou erro: Palestrante cadastrado com CPF invÃ¡lido\")\n>                   assert False\nE                   AssertionError\n\npages\\page_cadastrar_palestrante.py:215: AssertionError"}, "start": 1606187100219, "stop": 1606187108976, "uuid": "b40b92cf-bfeb-4257-ae0b-8c23517c1439", "historyId": "53165abeb852309a0dafe13b02c9776c", "testCaseId": "fdb6698bb4c2ac10dbdd28e82e1c2b7a", "fullName": "tests.test_cadastrar_palestrante#test_ct25", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cadastrar_palestrante"}, {"name": "host", "value": "DESKTOP-NM8JMBK"}, {"name": "thread", "value": "13308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cadastrar_palestrante"}]}
